{"version":3,"sources":["reducers/tasks.js","actions/tasks.js","containers/App.js","components/App.js","containers/PictureDetail.js","components/PictureDetail.js","serviceWorker.js","index.js"],"names":["initialState","pictures","pictureSRC","textInput","pageIndex","placeholderText","initializePicture","pictureTag","type","payload","addPicture","initializePictureSRC","addPictureSRC","inputText","text","changeIndex","indexNum","changePlaceholder","phText","connect","_ref","dispatch","ReloadImages","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","ChangePageIndex","fetch","then","response","json","j","picArray","photos","photo","map","pic","srcPath","farm","server","id","secret","picID","picURL","divID","react_default","createElement","key","react_router_dom","to","alt","src","srcObj","addObj","forEach","picInfo","title","assign","stop","apply","this","arguments","AddImages","_ref3","_callee2","_context2","addPicArray","p","className","placeholder","onChange","e","target","value","onClick","props","match","params","picSRC","picTitle","divHash","lib","smooth","Boolean","window","location","hostname","store","createStore","state","length","undefined","action","objectSpread","concat","newSRC","__REDUX_DEVTOOLS_EXTENSION__","render","es","react_router","exact","path","component","App","PictureDetail","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6034f935.chunk.js","sourcesContent":["// InitialState ----------------------------------------------------------------------------------------\nconst initialState = {\n  pictures: [],\n  pictureSRC: {},\n  textInput: 'shibuya',\n  pageIndex: 1,\n  placeholderText: '検索ワードを入力してください。例)shibuya',\n}\n\n// Reducer ----------------------------------------------------------------------------------------\nexport default function tasksReducer(state=initialState, action) {\n  switch (action.type) {\n    case 'INITIALIZE_PICTURE':\n      return {\n        ...state,\n        pictures: action.payload.pictureTag\n      };\n\n    case 'ADD_PICTURE':\n      return {\n        ...state,\n        pictures: state.pictures.concat([action.payload.pictureTag])\n      };\n\n    case 'INITIALIZE_PICTURESRC':\n      return {\n        ...state,\n        pictureSRC: action.payload.pictureSRC\n      };\n\n    case 'ADD_PICTURESRC':\n      const newSRC = Object.assign(state.pictureSRC, action.payload.pictureSRC);\n      return {\n        ...state,\n        pictureSRC: newSRC\n      };\n\n    case 'INPUT_TEXT':\n      return {\n        ...state,\n        textInput: action.payload.text\n      };\n\n    case 'CHANGE_INDEX':\n      return {\n        ...state,\n        pageIndex: action.payload.indexNum\n      };\n\n    case 'CHANGE_PLACEHOLDER':\n      return {\n        ...state,\n        placeholderText: action.payload.phText\n      };\n\n    default:\n      return state;\n  }\n}","// ActionCreator ----------------------------------------------------------------------------------------\nexport const initializePicture = (pictureTag) => ({\n  type: 'INITIALIZE_PICTURE',\n  payload: {\n    pictureTag\n  }\n});\n\nexport const addPicture = (pictureTag) => ({\n  type: 'ADD_PICTURE',\n  payload: {\n    pictureTag\n  }\n});\n\nexport const initializePictureSRC = (pictureSRC) => ({\n  type: 'INITIALIZE_PICTURESRC',\n  payload: {\n    pictureSRC\n  }\n});\n\nexport const addPictureSRC = (pictureSRC) => ({\n  type: 'ADD_PICTURESRC',\n  payload: {\n    pictureSRC\n  }\n});\n\nexport const inputText = (text) => ({\n  type: 'INPUT_TEXT',\n  payload: {\n    text\n  }\n});\n\nexport const changeIndex = (indexNum) => ({\n  type: 'CHANGE_INDEX',\n  payload: {\n    indexNum\n  }\n});\n\nexport const changePlaceholder = (phText) => ({\n  type: 'CHANGE_PLACEHOLDER',\n  payload: {\n    phText\n  }\n});","import { connect } from 'react-redux';\nimport App from '../components/App';\nimport { initializePicture, addPicture, initializePictureSRC, addPictureSRC, inputText, changeIndex, changePlaceholder } from '../actions/tasks';\n\n\nfunction mapStateToProps({ pictures, textInput, pageIndex, placeholderText }) {\n\treturn {\n\t\tpictures, textInput, pageIndex, placeholderText,\n\t};\n}\n\nfunction mapDispatchToPtops(dispatch) {\n\treturn {\n\t\tinitializePicture(pictureTag) {\n\t\t\tdispatch(initializePicture(pictureTag));\n\t\t},\n\t\taddPicture(pictureTag) {\n\t\t\tdispatch(addPicture(pictureTag));\n\t\t},\n\t\tinitializePictureSRC(pictureSRC) {\n\t\t\tdispatch(initializePictureSRC(pictureSRC));\n\t\t},\n\t\taddPictureSRC(pictureSRC) {\n\t\t\tdispatch(addPictureSRC(pictureSRC));\n\t\t},\n\t\tinputText(text) {\n\t\t\tdispatch(inputText(text));\n\t\t},\n\t\tchangeIndex(indexNum) {\n\t\t\tdispatch(changeIndex(indexNum));\n\t\t},\n\t\tchangePlaceholder(phText) {\n\t\t\tdispatch(changePlaceholder(phText));\n\t\t}\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToPtops)(App);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Conpornent ----------------------------------------------------------------------------------------\nexport default function App({\n  pictures, textInput, pageIndex, placeholderText, \n  initializePicture, addPicture, initializePictureSRC, addPictureSRC, inputText, changeIndex, changePlaceholder\n}) {\n  //async定義内では、awaitの処理が待たれる\n  const ReloadImages = async() => {\n    // await Promise.all([ ChangePageIndex(1), initializePictureSRC() ]);\n    await ChangePageIndex(1);\n\n    //fetch()の結果はPromiseで返され、resolve関数には引数としてResponseオブジェクトが渡される。\n    fetch('https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=80fc790f054fc08c6370aba43284e925&tags=' + textInput + '&per_page=10&page=1&format=json&nojsoncallback=1')\n    .then(function(response){\n      return response.json();\n    })\n    .then(function(j){\n\n\n      let picArray = j.photos.photo.map((pic) => {\n        const srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'_n.jpg';\n        const picID = pic.id;\n        const picURL = \"/picture/\" + pic.id;\n        const divID = \"id-\" + pic.id;\n\n        return(\n          <div id={divID} key={picID}>\n            <Link to={picURL}>\n              <img alt=\"\" src={srcPath}></img>\n            </Link>\n          </div>\n        )\n      })\n\n      let srcObj = {};\n      let addObj = {};\n      j.photos.photo.forEach((pic) => {\n        const srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n        const picID = pic.id;\n        const picTitle = pic.title;\n\n        const picInfo = {'src':srcPath, 'title':picTitle};\n        addObj[picID] = picInfo;\n        Object.assign(srcObj, addObj);\n      });\n\n      initializePicture(picArray);\n      initializePictureSRC(srcObj)\n\n      let phText = \"現在の検索ワード：\" + textInput;\n      changePlaceholder(phText);\n    })\n  }\n\n  const AddImages = async() => {\n    await ChangePageIndex();  //async定義内では、awaitの処理が待たれる\n    pageIndex++;\n\n    fetch('https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=80fc790f054fc08c6370aba43284e925&tags=' + textInput + '&per_page=10&page=' + pageIndex + '&format=json&nojsoncallback=1')\n    .then(function(response){\n      return response.json();\n    })\n    .then(function(j){\n      let addPicArray = j.photos.photo.map((pic) => {\n        const srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'_n.jpg';\n        const picID = pic.id;\n        const picURL = \"/picture/\" + pic.id;\n        const divID = \"id-\" + pic.id;\n\n        return(\n          <div id={divID} key={picID}>\n            <Link to={picURL}>\n              <img alt=\"\" src={srcPath} ></img>\n            </Link>\n          </div>\n        )\n      })\n\n      let srcObj = {};\n      let addObj = {};\n      j.photos.photo.forEach((pic) => {\n        const srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n        const picID = pic.id;\n        const picTitle = pic.title;\n\n        const picInfo = {'src':srcPath, 'title':picTitle};\n        addObj[picID] = picInfo;\n        Object.assign(srcObj, addObj);\n      });\n\n      addPicture(addPicArray);\n      addPictureSRC(srcObj);\n    })\n  }\n\n  //input変更時、stateの検索キーワードを変更\n  const HandleChange = (e) => {\n    if(e.target.value === \"\"){\n    }else{\n      inputText(e.target.value);\n    }\n  }\n\n  const ChangePageIndex = (p) => {\n    if(!p){\n      p = pageIndex;\n      p++;\n    }\n\n    var currentPageIndex = p;\n    changeIndex(currentPageIndex);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"App-title\">Flickr Gallery</h1>\n      </header>\n\n      <p className=\"searchBox\">\n        <input className=\"textInput\" \n          placeholder= {placeholderText}\n          onChange = {HandleChange}\n        ></input>\n\n        <button\n          onClick = {ReloadImages}\n        >検索</button>\n      </p>\n\n      <section className=\"picArea\">\n        {pictures}\n      </section>\n\n      <p className=\"moreButton\">\n        <button\n          onClick = {AddImages}\n        >画像をさらに読み込む</button>\n      </p>\n    </div>\n  );\n}","import { connect } from 'react-redux';\nimport PictureDetail from '../components/PictureDetail';\n\n\nfunction mapStateToProps({pictureSRC}) {\n\treturn {\n\t\tpictureSRC\n\t};\n}\n\nexport default connect(mapStateToProps)(PictureDetail);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {HashLink} from 'react-router-hash-link';\n\n// Conpornent ----------------------------------------------------------------------------------------\nexport default function PictureDetail(props) {\n\n  var picID = props.match.params.id;\n  var picInfo = props.pictureSRC[picID];\n  if(picInfo){\n    var picSRC = picInfo['src'];\n    var picTitle = picInfo['title'];\n    var divHash = \"/#id-\" + picID;\n  }\n\n  return (\n    <div className=\"App PictureDetail\">\n      <header>\n        <h1 className=\"App-title\">Flickr Gallery</h1>\n      </header>\n\n      <div>\n        {(\n          () => {\n            if (picInfo) {\n              return (\n                <div>\n                  <img src={picSRC} alt={picTitle}/>\n                  <p>{picTitle}</p>\n                </div>\n              );\n            } else {\n              return (\n                <p>画像が取得できていません。</p>\n              );\n            }\n          }\n        )()}\n      </div>\n\n      <p className=\"moreButton\">\n        {(\n          () => {\n            if (picInfo) {\n              return (\n                // <Link to={divHash} ><button>戻る</button></Link>\n                <HashLink smooth to={divHash} ><button>戻る</button></HashLink>\n              );\n            } else {\n              return (\n                <Link to=\"/\" ><button>戻る</button></Link>\n              );\n            }\n          }\n        )()}\n      </p>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport tasksReducer from './reducers/tasks'\n// import { ReloadImages, AddImages, HandleChange, ChangePageIndex, App } from './containers/App'\nimport App from './containers/App'\nimport PictureDetail from './containers/PictureDetail'\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n// Store ----------------------------------------------------------------------------------------\nconst store = createStore(\n  tasksReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n// Rendering ----------------------------------------------------------------------------------------\nrender(\n  <Provider store={store}>\n    <Router>\n      <Route exact path=\"/\" component={App} />\n      <Route \n        path=\"/picture/:id\"\n        component={PictureDetail}\n      />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}